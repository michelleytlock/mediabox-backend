{"version":3,"sources":["config.js","components/PrivateRoute.js","components/LandingPage.js","components/SignupPage.js","components/LoginPage.js","components/OnboardingRater.js","components/Onboarding.js","components/MediaFilter.js","components/Navbar.js","components/HomeRater.js","components/Filter.js","components/Home.js","components/Intro.js","components/List.js","components/Profile.js","components/Watchlist.js","components/MediaDetails.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["process","PrivateRoute","state","loggedInUser","getUser","axios","get","config","withCredentials","then","res","data","setState","props","history","push","catch","err","console","log","response","status","this","MyComponent","component","render","Component","withRouter","LandingPage","done","undefined","setTimeout","loadingData","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","className","to","options","height","width","type","color","React","SignupPage","path","mdiClose","size","onSubmit","onSignup","htmlFor","id","name","placeholder","LoginPage","onLogin","OnboardingRater","imageSrc","random","poster_path","src","alt","title","onClick","onRate","onSkip","Onboarding","ratedList","length","value","max","MediaFilter","onMovieChange","onTVChange","Navbar","HomeRater","onSave","Filter","onSearch","recommended","trending","Home","user","randomMedia","randomMediaType","list","mediaPage","recommendedState","handleSearch","e","preventDefault","target","search","objResults","results","filter","media","handleSearchProps","getRandomMedia","ratedMediaType","listType","mediaType","randomRatedMedia","rating","Math","floor","apiId","randomResultsIndex","getTrendingMedia","handleRate","innerHTML","post","description","overview","image","genres","handleSkip","handleSave","handleToggleMovie","handleToggleTV","Intro","onboardingList","filterForRepeats","includes","randomNum","genre_ids","response1","rated","List","map","index","mediaId","key","Profile","ratedMovies","ratedTVShows","topMovieGenres","topTVGenres","allMovieGenres","allTVGenres","listView","renderChart","handleSort","movies","tv","alphaMovies","sort","a","b","alphaTV","sortRatingMovies","sortRatingTV","handleProfilePic","imageUrl","file","files","uploadData","FormData","append","profileImg","secure_url","patch","handleLogOut","handleDeleteAccount","delete","handleList","ones","twos","threes","fours","fives","i","ctx","document","getElementById","Chart","labels","datasets","label","backgroundColor","borderColor","borderWidth","display","text","substring","toUpperCase","legend","tooltips","enabled","scales","xAxes","gridLines","drawBorder","drawOnChartArea","yAxes","genreLabels","genreData","elem","num","genreColors","slice","ctx2","tvShows","listOfMovieGenres","movieGenresArr","movie","genreId","newMovieGenresArr","Number","genre","chartMovieGenres","reduce","filtered","listOfTVGenres","tvGenresArr","newTvGenresArr","chartTVGenres","date","Date","createdAt","year","getFullYear","month","getMonth","mdiAccount","accept","username","email","animationDate","Watchlist","window","localStorage","setItem","getItem","filterByMediaType","photoPath","MediaDetails","credits","handleBack","goBack","computedMatch","params","director","backdrop_path","release_date","runtime","tagline","created_by","first_air_date","last_air_date","number_of_episodes","number_of_seasons","cast","crew","crewMem","job","mdiKeyboardBackspace","profile_path","castMem","character","SearchResults","App","searchResults","handleSignUp","password","handleLogin","exact","routeProps","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0e15f7ee.chunk.js","sourcesContent":["export default {\n  API_URL: process.env.REACT_APP_API_URL\n}","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nclass PrivateRoute extends Component {\n  state = {\n    loggedInUser: '',\n  };\n\n  componentDidMount() {\n    //check if there is a logged in user\n    if (!this.state.loggedInUser) {\n      this.getUser();\n    }\n  }\n\n  getUser = () => {\n    //get user from session from server\n    axios\n      .get(`${config.API_URL}/user`, { withCredentials: true })\n      .then((res) => {\n        // console.log(res)\n        if (res.data) {\n          this.setState({\n            loggedInUser: res.data,\n          });\n        } else {\n          this.props.history.push(\"/login\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        if (err.response.status === 401) {\n          this.props.history.push(\"/\");\n        }\n      });\n  };\n\n  render() {\n\n    let MyComponent = this.props.component\n    if (!this.state.loggedInUser) {\n      return null\n      //loading\n    }\n    // console.log(this.state.loggedInUser)\n    // console.log(this.props.component)\n    \n    return (\n      <Route\n        render={() => {\n          return <MyComponent loggedInUser={this.state.loggedInUser} {...this.props} />;\n        }}\n      />\n    );\n  }\n}\n\nexport default withRouter(PrivateRoute);","import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport Lottie from \"react-lottie\";\nimport ReactLoading from \"react-loading\";\nimport loadingData from \"../loadingAnimation.json\";\nimport { Link } from \"react-router-dom\";\n\nexport default class LandingPage extends React.Component {\n  state = {\n    done: undefined,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ done: true });\n    }, 2000);\n  }\n\n  render() {\n    console.log(loadingData)\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: loadingData,\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\",\n      },\n    };\n\n    return (\n      <>\n        {!this.state.done ? (\n          <div className=\"loading\">\n            <FadeIn>\n              <h1 className=\"logo\">MediaBox</h1>\n              <Lottie options={defaultOptions} height={120} width={120} />\n            </FadeIn>\n            <ReactLoading type={\"spin\"} color={\"white\"} />\n          </div>\n        ) : (\n          <div className=\"landing\">\n              <div className=\"landing-content\">\n              <Link to={\"/login\"}>\n                <button className=\"button is-rounded login-button\">Log In</button>\n                </Link>\n                <div><h1 className=\"logo\">MediaBox</h1>\n                <h2 className=\"intro-text\">Rate movies & tv shows you've watched and get recommendations based on your ratings</h2></div>\n                \n              <Link to={\"/signup\"}>\n                <button className=\"button is-rounded is-primary is-fullwidth is-medium signup-button\">\n                  Get Started\n                </button>\n              </Link>\n              \n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Icon from \"@mdi/react\";\nimport { mdiClose } from \"@mdi/js\";\n\nexport default function SignupPage(props) {\n  return (\n    <div className=\"signup-page\">\n      <button className=\"close-button\">\n        <Link to=\"/\">\n          <Icon path={mdiClose} size={1.5} color=\"black\" />\n        </Link>\n      </button>\n      <div className=\"form\">\n        <h1 className=\"title\">Sign Up</h1>\n        <form onSubmit={props.onSignup}>\n          {/* USERNAME */}\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"moaningmyrtle\"\n            />\n          </div>\n          {/* EMAIL */}\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              className=\"input\"\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"myrtle@girlsbathroom.com\"\n            />\n          </div>\n          {/* PASSWORD */}\n          <div className=\"field last-field\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"input\"\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"***********\"\n            />\n          </div>\n          {/* BUTTONS */}\n          <div className=\"field\">\n            <div className=\"control\">\n              <button\n                type=\"submit\"\n                className=\"button is-rounded is-primary is-fullwidth is-medium signup-button\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Icon from \"@mdi/react\";\nimport { mdiClose } from \"@mdi/js\";\n\nexport default function LoginPage(props) {\n  return (\n    <div className=\"signup-page\">\n      <button className=\"close-button\">\n        <Link to=\"/\">\n          <Icon path={mdiClose} size={1.5} color=\"black\" />\n        </Link>\n      </button>\n      <div className=\"form\">\n        <h1 className=\"title\">Log In</h1>\n        <form onSubmit={props.onLogin}>\n          {/* USERNAME */}\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"moaningmyrtle\"\n            />\n          </div>\n          {/* PASSWORD */}\n          <div className=\"field last-field\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"input\"\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"***********\"\n            />\n          </div>\n          {/* BUTTONS */}\n          <div className=\"field\">\n            <div className=\"control\">\n              <button type=\"submit\" className=\"button is-rounded is-primary is-fullwidth is-medium signup-button\">\n                Continue\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nlet photoPath = \"https://image.tmdb.org/t/p/w500/\";\n\nexport default function OnboardingRater(props) {\n  let imageSrc = photoPath + props.random.poster_path;\n\n  return (\n    <div className=\"rater\">\n      <img className=\"media-image\"\n        src={props.random.poster_path ? imageSrc : \"\"}\n        alt={props.random.title}\n      />\n\n      <div className=\"rating-buttons\">\n        <button onClick={props.onRate} className=\"button is-primary circle-buttons\">\n          1\n        </button>\n        <button onClick={props.onRate} className=\"button is-primary circle-buttons\">\n          2\n        </button>\n        <button onClick={props.onRate} className=\"button is-primary circle-buttons\">\n          3\n        </button>\n        <button onClick={props.onRate} className=\"button is-primary circle-buttons\">\n          4\n        </button>\n        <button onClick={props.onRate} className=\"button is-primary circle-buttons\">\n          5\n        </button>\n      </div>\n\n      <button\n        onClick={props.onSkip}\n        className=\"button is-rounded is-primary is-fullwidth is-medium\"\n      >\n        Skip\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport \"../styles/Onboarding.css\";\n\nimport OnboardingRater from \"./OnboardingRater\";\n\nexport default class Onboarding extends Component {\n  render() {\n    console.log(this.props.ratedList);\n    return (\n      <>\n        <h5 className=\"is-5 instructions\">\n          Rate the movie or tv show from a scale of 1 to 5 (from hated to loved) to help us figure out what you might like.\n        </h5>\n        <div className=\"onboarding-page\">\n          <h6 className=\"is-6 progress-percentage\">\n            {(this.props.ratedList.length / 10) * 100 + \"%\"}\n          </h6>\n          <div className=\"progress-bar\">\n            <progress\n              className=\"progress is-primary is-small\"\n              value={(this.props.ratedList.length / 10) * 100}\n              max=\"100\"\n            >\n              {this.props.ratedList.length / 10 + \"%\"}\n            </progress>\n          </div>\n\n          <OnboardingRater\n            random={this.props.random}\n            onRate={this.props.onRate}\n            onSkip={this.props.onSkip}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function MediaFilter(props) {\n  return (\n    <div className=\"media-filter\">\n      <button className=\"button is-white is-small\" onClick={props.onMovieChange}>\n        <h5 className=\"title is-5\">MOVIES</h5>\n      </button>\n      <button className=\"button is-white is-small\" onClick={props.onTVChange}>\n        <h5 className=\"title is-5\">TV SHOWS</h5>\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n    <>\n      <nav className=\"navbar is-primary is-fixed-bottom myNav\">\n            <Link className=\"navbar-item\" to={`/home`}>\n            Discover\n            </Link>\n            <Link className=\"navbar-item\" to={`/watchlist`}>\n            Watchlist\n            </Link>\n            <Link className=\"navbar-item\" to={`/profile`}>\n            Profile\n            </Link>\n      </nav>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nlet photoPath = \"https://image.tmdb.org/t/p/w500/\";\n\nexport default function HomeRater(props) {\n  let imageSrc = photoPath + props.random.poster_path;\n\n  return (\n    <div className=\"rater\">\n      <Link to={`/${props.type}/${props.random.id}`}>\n        <img\n          className=\"media-image\"\n          src={props.random.poster_path ? imageSrc : \"\"}\n          alt={props.random.title}\n        />\n      </Link>\n\n      <div className=\"rating-buttons\">\n        <button\n          onClick={props.onRate}\n          className=\"button is-primary circle-buttons\"\n        >\n          1\n        </button>\n        <button\n          onClick={props.onRate}\n          className=\"button is-primary circle-buttons\"\n        >\n          2\n        </button>\n        <button\n          onClick={props.onRate}\n          className=\"button is-primary circle-buttons\"\n        >\n          3\n        </button>\n        <button\n          onClick={props.onRate}\n          className=\"button is-primary circle-buttons\"\n        >\n          4\n        </button>\n        <button\n          onClick={props.onRate}\n          className=\"button is-primary circle-buttons\"\n        >\n          5\n        </button>\n      </div>\n\n      <div className=\"action-buttons\">\n        <button\n          onClick={props.onSave}\n          className=\"button is-rounded\"\n        >\n          Save to Watchlist\n        </button>\n        <button\n          onClick={props.onSkip}\n          className=\"button is-rounded\"\n        >\n          Skip\n        </button>\n      </div>\n\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Filter(props) {\n\n  let placeholder;\n  props.type === \"movie\"\n    ? (placeholder = \"Search movies...\")\n    : (placeholder = \"Search tv shows...\");\n\n  return (\n    <div className=\"main-filter\">\n      <form className=\"search-filter\" onSubmit={props.onSearch}>\n        <input\n          className=\"input searchbar\"\n          name=\"search\"\n          type=\"text\"\n          placeholder={placeholder}\n        />\n        <button className=\"button is-primary is-rounded\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"random-medias-toggler\">\n        <button\n          onClick={props.recommended}\n          className=\"button is-rounded\"\n        >\n          Recommended\n        </button>\n        <button\n          onClick={props.trending}\n          className=\"button is-rounded\"\n        >\n          Trending\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nimport MediaFilter from \"./MediaFilter\";\nimport Navbar from \"./Navbar\";\nimport HomeRater from \"./HomeRater\";\nimport Filter from \"./Filter\";\n\nimport \"../styles/Home.css\";\n\nclass Home extends Component {\n  state = {\n    user: this.props.loggedInUser,\n    randomMedia: \"\",\n    randomMediaType: \"\",\n    list: [],\n    mediaPage: \"movie\",\n    recommendedState: true\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${config.API_URL}/userData`, { withCredentials: true })\n      .then((res) => {\n        this.setState(\n          {\n            list: res.data.list,\n          },\n          () => {\n            // console.log(\"CDM\");\n            // if (!window.localStorage.getItem(\"media\")) {\n            //   this.getRandomMedia();\n            // }\n            this.getRandomMedia();\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"userData err\" + err);\n      });\n  }\n\n  handleSearch = (e) => {\n    e.preventDefault();\n    \n    console.log(e.target.search.value);\n    console.log(this.props.history)\n\n    axios\n      .get(`${config.API_URL}/${this.state.mediaPage}/${e.target.search.value}/searchresults`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data)\n\n        let results = res.data.filter((media) => {\n          return media.poster_path;\n        });\n\n        let objResults = {\n          results: results,\n          mediaPage: this.state.mediaPage\n        }\n\n        console.log(objResults)\n        this.props.handleSearchProps(objResults)\n        this.props.history.push('/search')\n      })\n      .catch((err) => {\n        console.log(\"search err\" + err);\n      });\n  };\n\n  getRandomMedia = () => {\n    // FILTER THROUGH LIST TO FIND \"RATED\" MEDIAS\n    let allRated = this.state.list.filter((media) => {\n      return media.listType === \"rated\";\n    });\n\n    // FILTER THROUGH LIST TO FIND THE CORRECT TYPE (MOVIE/TV)\n    let ratedMediaType = allRated.filter((media) => {\n      return media.mediaType === this.state.mediaPage;\n    });\n\n    // console.log(ratedMediaType)\n\n    // FILTER THROUGH TO FIND RATING FROM 3-5\n    let likedMedia = ratedMediaType.filter((media) => {\n      return media.rating === 3 || media.rating === 4 || media.rating === 5\n    })\n\n    // console.log(likedMedia)\n    // console.log(this.state.mediaPage);\n    // console.log(ratedMediaType);\n    // console.log(this.state.recommendedState);\n\n    let randomRatedMediaIndex = Math.floor(\n      Math.random() * ratedMediaType.length\n    );\n\n    let randomRatedMedia = likedMedia[randomRatedMediaIndex];\n\n    console.log(randomRatedMedia)\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/${this.state.mediaPage}/${randomRatedMedia.apiId}/recommendations?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\n      )\n      .then((res) => {\n        // console.log(res.data.total_pages)\n        let results = res.data.results.filter((media) => {\n          return media.poster_path;\n        });\n\n        let randomResultsIndex = Math.floor(Math.random() * results.length);\n\n        // console.log(randomResultsIndex);\n        console.log(\n          \"This is recommended random media \",\n          results[randomResultsIndex]\n        );\n\n        // window.localStorage.setItem(\"media\", JSON.stringify(results[randomResultsIndex]));\n        // window.localStorage.setItem(\"type\", this.state.mediaPage);\n        this.setState({\n          recommendedState: true,\n          randomMedia: results[randomResultsIndex],\n          randomMediaType: this.state.mediaPage,\n        });\n      })\n      .catch((err) => {\n        console.log(\"getRandom err\" + err);\n      });\n  };\n\n  getTrendingMedia = () => {\n    console.log(this.state.recommendedState);\n    axios\n      .get(\n        `https://api.themoviedb.org/3/trending/${this.state.mediaPage}/day?api_key=${process.env.REACT_APP_API_KEY}`\n      )\n      .then((res) => {\n        let results = res.data.results.filter((media) => {\n          return media.poster_path;\n        });\n\n        let randomResultsIndex = Math.floor(Math.random() * results.length);\n        console.log(\"This is trending media \", results[randomResultsIndex]);\n        this.setState({\n          recommendedState: false,\n          randomMedia: results[randomResultsIndex],\n          randomMediaType: this.state.mediaPage,\n        });\n      })\n      .catch((err) => {\n        console.log(\"gettrending err\" + err);\n      });\n  };\n\n  handleRate = (e) => {\n    let rating = e.target.innerHTML;\n    console.log(this.state.recommendedState);\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.randomMediaType,\n          apiId: this.state.randomMedia.id,\n          listType: \"rated\",\n          rating,\n          description: this.state.randomMedia.overview,\n          image: this.state.randomMedia.poster_path,\n          title:\n            this.state.randomMediaType === \"movie\"\n              ? this.state.randomMedia.title\n              : this.state.randomMedia.name,\n          genres: this.state.randomMedia.genres\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n\n        // FIX RATED MOVIES RENDERING AGAIN HERE\n\n        // window.localStorage.removeItem(\"media\");\n        this.setState(\n          {\n            list: response.data.list,\n            randomMedia: \"\",\n            randomMediaType: \"\",\n          },\n          () => {\n            this.recommendedState\n              ? this.getRandomMedia()\n              : this.getTrendingMedia();\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"create media err\" + err);\n      });\n  };\n\n  handleSkip = () => {\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.randomMediaType,\n          apiId: this.state.randomMedia.id,\n          listType: \"skipped\",\n          description: this.state.randomMedia.overview,\n          image: this.state.randomMedia.poster_path,\n          title:\n            this.state.randomMediaType === \"movie\"\n              ? this.state.randomMedia.title\n              : this.state.randomMedia.name,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n        this.setState(\n          {\n            list: response.data.list,\n            randomMedia: \"\",\n            randomMediaType: \"\",\n          },\n          () => {\n            this.recommendedState\n              ? this.getRandomMedia()\n              : this.getTrendingMedia();\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"skip err\" + err);\n      });\n  };\n\n  handleSave = () => {\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.randomMediaType,\n          apiId: this.state.randomMedia.id,\n          listType: \"watchlist\",\n          description: this.state.randomMedia.overview,\n          image: this.state.randomMedia.poster_path,\n          title:\n            this.state.randomMediaType === \"movie\"\n              ? this.state.randomMedia.title\n              : this.state.randomMedia.name,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n        this.setState(\n          {\n            list: response.data.list,\n            randomMedia: \"\",\n            randomMediaType: \"\",\n          },\n          () => {\n            this.recommendedState\n              ? this.getRandomMedia()\n              : this.getTrendingMedia();\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"save to watchlist err\" + err);\n      });\n  };\n\n  handleToggleMovie = () => {\n    this.setState(\n      {\n        mediaPage: \"movie\",\n      },\n      this.getRandomMedia\n    );\n  };\n\n  handleToggleTV = () => {\n    this.setState(\n      {\n        mediaPage: \"tv\",\n      },\n      this.getRandomMedia\n    );\n  };\n\n  render() {\n    let media = this.state.randomMedia;\n    let type = this.state.randomMediaType;\n\n    // if (window.localStorage.getItem(\"media\")) {\n    //   media = JSON.parse(window.localStorage.getItem(\"media\"));\n    //   type = window.localStorage.getItem(\"type\")\n    // }\n\n    return (\n      <div className=\"home-page\">\n        <MediaFilter\n          onMovieChange={this.handleToggleMovie}\n          onTVChange={this.handleToggleTV}\n        />\n        <Filter\n          type={type}\n          trending={this.getTrendingMedia}\n          recommended={this.getRandomMedia}\n          onSearch={this.handleSearch}\n        />\n        <HomeRater\n          random={media}\n          type={type}\n          onRate={this.handleRate}\n          onSkip={this.handleSkip}\n          onSave={this.handleSave}\n        />\n        <Navbar />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nimport Onboarding from \"./Onboarding\";\nimport Home from \"./Home\";\n\nclass Intro extends Component {\n  state = {\n    user: this.props.loggedInUser,\n    randomMedia: \"\",\n    randomMediaType: \"\",\n    list: [],\n    onboardingList: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${config.API_URL}/userData`, { withCredentials: true })\n      .then((res) => {\n\n        // console.log(this.props)\n        this.setState({\n          list: res.data.list,\n        });\n\n        let rated = [];\n\n        if (this.state.list.length !== 0) {\n          rated = this.state.list.filter((media) => {\n            return (media.listType = \"rated\");\n          });\n        }\n\n        if (rated.length < 10) {\n          this.getRandomMedia();\n        }\n      })\n      .catch((err) => {\n        console.log(\"CDM err\" + err);\n      });\n  }\n\n  getRandomMedia = () => {\n    console.log(\"get random media console log\");\n    let random = Math.floor(Math.random() * 2);\n    let mediaType;\n\n    random === 1 ? (mediaType = \"movie\") : (mediaType = \"tv\");\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/${mediaType}/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\n      )\n      .then((res) => {\n        console.log(res.data.results)\n        let results = res.data.results.filter((media) => {\n          return media.poster_path;\n        });\n\n        let filterForRepeats = results.filter((media) => {\n          return !this.state.onboardingList.includes(media)\n        })\n\n        console.log(filterForRepeats)\n        console.log(this.state.onboardingList)\n\n        let randomNum = Math.floor(Math.random() * results.length);\n\n        console.log(filterForRepeats[randomNum]);\n\n        this.setState({\n          onboardingList: [...this.state.onboardingList, filterForRepeats[randomNum]],\n          randomMedia: results[randomNum],\n          randomMediaType: mediaType,\n        });\n      })\n      .catch((err) => {\n        console.log(\"getrandom err\" + err);\n      });\n  };\n\n  handleRate = (e) => {\n    e.preventDefault();\n    let rating = e.target.innerHTML;\n    console.log('rating ', rating);\n    // console.log(this.state.randomMediaType);\n    const { randomMediaType, randomMedia} = this.state\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: randomMediaType,\n          apiId: randomMedia.id,\n          listType: \"rated\",\n          rating,\n          description: randomMedia.overview,\n          image: randomMedia.poster_path,\n          title:\n            randomMediaType === \"movie\"\n              ? randomMedia.title\n              : randomMedia.name,\n          genres: randomMedia.genre_ids,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n        \n        this.setState({\n          list: response.data.list,\n          randomMedia: \"\",\n          randomMediaType: \"\",\n        });\n\n        let rated = this.state.list.filter((media) => {\n          return media.listType === \"rated\";\n        });\n\n        if (rated.length < 10) {\n          this.getRandomMedia();\n        }\n      })\n      .catch((err) => {\n        console.log(\"create media err\" + err);\n      });\n  };\n\n  handleSkip = () => {\n    console.log('skipping')\n    const { randomMediaType, randomMedia} = this.state\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: randomMediaType,\n          apiId: randomMedia.id,\n          listType: \"skipped\",\n          description: randomMedia.overview,\n          image: randomMedia.poster_path,\n          title:\n            randomMediaType === \"movie\"\n              ? randomMedia.title\n              : randomMedia.name,\n          genres: randomMedia.genre_ids,\n        },\n        { withCredentials: true }\n      )\n      .then((response1) => {\n        // let clonedState = JSON.parse(JSON.stringify(this.state.list))\n        // console.log(response1.data)\n        // clonedState.length = response1.data.list.length\n        // for (let i = 0; i < response1.data.list.length; i++) {\n        //   clonedState[i] = response1.data.list[i]\n        //   clonedState[i].listType = 'skipped'\n        //   console.log(clonedState[i])\n        // }\n        // console.log(clonedState)\n\n        this.setState({\n          list: response1.data.list,\n          randomMedia: \"\",\n          randomMediaType: \"\",\n        }, () => { \n          let rated = this.state.list.filter((media) => {\n            return media.listType === \"rated\";\n          });\n  \n          if (rated.length < 10) {\n            this.getRandomMedia();\n          }\n        });\n\n        \n      })\n      .catch((err) => {\n        console.log(\"skip err\" + err);\n      });\n  };\n\n  render() {\n    const { list } = this.state;\n\n    let rated = list.filter((media) => {\n      return media.listType === \"rated\";\n    });\n\n    // if (!list.length) {\n    //   return <div>Loading . . . </div>\n    // }\n\n    return (\n      <>\n        {rated.length < 10 ? (\n          <Onboarding\n            ratedList={rated}\n            random={this.state.randomMedia}\n            onRate={this.handleRate}\n            onSkip={this.handleSkip}\n          />\n        ) : (\n            <Home {...this.props} />\n        )}\n      </>\n    );\n  }\n}\nexport default Intro;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nlet photoPath = \"https://image.tmdb.org/t/p/w500/\";\n\nexport default function List(props) {\n  console.log(props.list);\n  let list = [];\n  let type = '';\n\n  props.list.results ? list = props.list.results : list = props.list\n\n  props.list.mediaPage ? type = props.list.mediaPage : type = props.type\n\n  return (\n      <div className=\"list\">\n      {list.map((media, index) => {\n        let image = '';\n        let title = '';\n        let id = 0;\n\n        media.poster_path ? image = media.poster_path : image = media.mediaId.image\n        \n        media.title ? title = media.title : title = media.name\n\n        media.title || media.name ? title = title : title = media.mediaId.title\n\n        media.id ? id = media.id : id = media.apiId\n\n          return (\n            <div key={index} className=\"list-item\">\n              <Link to={`/${type}/${id}`}>\n                <img\n                  src={photoPath + image}\n                  alt={title}\n                />\n                <p className=\"list-item-title\">{title}</p>\n                {media.rating && <p className=\"list-item-rating\">{media.rating}</p>}\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport axios from \"axios\";\nimport Chart from \"chart.js\";\nimport Icon from \"@mdi/react\";\nimport { mdiAccount } from \"@mdi/js\";\n\nimport Navbar from \"./Navbar\";\nimport MediaFilter from \"./MediaFilter\";\nimport List from \"./List\";\n\nimport \"../styles/Profile.css\";\n\nclass Profile extends Component {\n  state = {\n    ratedMovies: [],\n    ratedTVShows: [],\n    topMovieGenres: [],\n    topTVGenres: [],\n    mediaPage: \"movie\",\n    allMovieGenres: [],\n    allTVGenres: [],\n    listView: false,\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${config.API_URL}/userData`, { withCredentials: true })\n      .then((res) => {\n        axios\n          .get(`${config.API_URL}/getGenres`, { withCredentials: true })\n          .then((genres) => {\n            //FILTER ONLY RATED MEDIAS\n            let rated = res.data.list.filter((media) => {\n              return media.listType === \"rated\";\n            });\n\n            //FILTER BY MEDIA TYPE\n            let movies = rated.filter((media) => {\n              return media.mediaType === \"movie\";\n            });\n\n            let tvShows = rated.filter((media) => {\n              return media.mediaType === \"tv\";\n            });\n\n            //FIND MOST WATCHED MOVIE GENRES\n            let listOfMovieGenres = {};\n            let movieGenres = movies.map((movie) => {\n              for (let i = 0; i < movie.mediaId.genres.length; i++) {\n                let genreId = movie.mediaId.genres[i];\n                if (!listOfMovieGenres[genreId]) {\n                  listOfMovieGenres[genreId] = 1;\n                } else {\n                  listOfMovieGenres[genreId]++;\n                }\n              }\n            });\n            let movieGenresArr = [];\n            for (let id in listOfMovieGenres) {\n              movieGenresArr.push([id, listOfMovieGenres[id]]);\n            }\n            movieGenresArr.sort((a, b) => {\n              return b[1] - a[1];\n            });\n            let newMovieGenresArr = movieGenresArr.slice(0, 3).map((id) => {\n              return Number(id[0]);\n            });\n\n            let topMovieGenres = genres.data.movie.genres.filter((genre) => {\n              return newMovieGenresArr.includes(genre.id);\n            });\n\n            let chartMovieGenres = genres.data.movie.genres.reduce(\n              (filtered, elem) => {\n                for (let i = 0; i < movieGenresArr.length; i++) {\n                  if (elem.id === Number(movieGenresArr[i][0])) {\n                    movieGenresArr[i][0] = elem.name;\n                    filtered.push(movieGenresArr[i]);\n                  }\n                }\n                return filtered;\n              },\n              []\n            );\n\n            //FIND MOST WATCHED TV GENRES\n            let listOfTVGenres = {};\n            let tvGenres = tvShows.map((tv) => {\n              for (let i = 0; i < tv.mediaId.genres.length; i++) {\n                let genreId = tv.mediaId.genres[i];\n                if (!listOfTVGenres[genreId]) {\n                  listOfTVGenres[genreId] = 1;\n                } else {\n                  listOfTVGenres[genreId]++;\n                }\n              }\n            });\n            let tvGenresArr = [];\n            for (let id in listOfTVGenres) {\n              tvGenresArr.push([id, listOfTVGenres[id]]);\n            }\n            tvGenresArr.sort((a, b) => {\n              return b[1] - a[1];\n            });\n\n            let newTvGenresArr = tvGenresArr.slice(0, 3).map((id) => {\n              return Number(id[0]);\n            });\n\n            let topTVGenres = genres.data.tv.genres.filter((genre) => {\n              return newTvGenresArr.includes(genre.id);\n            });\n\n            let chartTVGenres = genres.data.tv.genres.reduce(\n              (filtered, elem) => {\n                for (let i = 0; i < tvGenresArr.length; i++) {\n                  if (elem.id === Number(tvGenresArr[i][0])) {\n                    tvGenresArr[i][0] = elem.name;\n                    filtered.push(tvGenresArr[i]);\n                  }\n                }\n                return filtered;\n              },\n              []\n            );\n\n            // console.log(genres.data.movie);\n            // console.log(newMovieGenresArr);\n            // console.log(topMovieGenres);\n            // console.log(topTVGenres);\n            // console.log(genres.data.movie.genres)\n\n            this.setState(\n              {\n                profileImg: res.data.profileImg,\n                ratedMovies: movies,\n                ratedTVShows: tvShows,\n                topMovieGenres,\n                topTVGenres,\n                allMovieGenres: chartMovieGenres,\n                allTVGenres: chartTVGenres,\n              },\n              () => {\n                this.renderChart();\n              }\n            );\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleToggleMovie = () => {\n    this.setState(\n      {\n        mediaPage: \"movie\",\n      },\n      () => {\n        this.renderChart();\n      }\n    );\n  };\n\n  handleToggleTV = () => {\n    this.setState(\n      {\n        mediaPage: \"tv\",\n      },\n      () => {\n        this.renderChart();\n      }\n    );\n  };\n\n  handleSort = (e) => {\n    console.log(e.target.value);\n    if (e.target.value === \"alpha\") {\n      let movies = this.state.ratedMovies;\n      let tv = this.state.ratedTVShows;\n\n      let alphaMovies = movies.sort((a, b) => {\n        if (a.mediaId.title < b.mediaId.title) {\n          return -1;\n        } else if (a.mediaId.title > b.mediaId.title) {\n          return 1;\n        }\n        return 0;\n      });\n\n      console.log(alphaMovies);\n\n      let alphaTV = tv.sort((a, b) => {\n        if (a.mediaId.title < b.mediaId.title) {\n          return -1;\n        } else if (a.mediaId.title > b.mediaId.title) {\n          return 1;\n        }\n        return 0;\n      });\n\n      console.log(alphaTV);\n\n      this.setState({\n        ratedMovies: alphaMovies,\n        ratedTVShows: alphaTV,\n      });\n    } else {\n      let sortRatingMovies = this.state.ratedMovies.sort((a, b) => {\n        return b.rating - a.rating;\n      });\n\n      let sortRatingTV = this.state.ratedTVShows.sort((a, b) => {\n        return b.rating - a.rating;\n      });\n\n      this.setState({\n        ratedMovies: sortRatingMovies,\n        ratedTVShows: sortRatingTV,\n      });\n    }\n  };\n\n  handleProfilePic = (e) => {\n    e.preventDefault();\n    let imageUrl = e.target.file.files[0];\n    console.log(imageUrl);\n\n    let uploadData = new FormData();\n    uploadData.append(\"imageUrl\", imageUrl);\n\n    axios\n      .post(`${config.API_URL}/upload`, uploadData)\n      .then((response) => {\n        let profileImg = response.data.secure_url;\n        console.log(profileImg);\n        axios\n          .patch(\n            `${config.API_URL}/editProfile`,\n            { profileImg },\n            { withCredentials: true }\n          )\n          .then(() => {\n            this.setState({\n              profileImg: response.data.secure_url\n            })\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleLogOut = () => {\n    axios\n      .get(`${config.API_URL}/logout`)\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleDeleteAccount = () => {\n    axios\n      .delete(`${config.API_URL}/user`, { withCredentials: true })\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleList = () => {\n    this.setState({\n      listView: !this.state.listView,\n    });\n  };\n\n  renderChart = () => {\n    const {\n      ratedMovies,\n      ratedTVShows,\n      allMovieGenres,\n      allTVGenres,\n    } = this.state;\n\n    let ones = 0,\n      twos = 0,\n      threes = 0,\n      fours = 0,\n      fives = 0;\n\n    if (this.state.mediaPage === \"movie\") {\n      for (let i = 0; i < ratedMovies.length; i++) {\n        switch (ratedMovies[i].rating) {\n          case 1:\n            ones++;\n            break;\n          case 2:\n            twos++;\n            break;\n          case 3:\n            threes++;\n            break;\n          case 4:\n            fours++;\n            break;\n          case 5:\n            fives++;\n            break;\n          default:\n            console.log(ratedMovies[i].apiId + \"missing rating\");\n            break;\n        }\n      }\n    } else {\n      for (let i = 0; i < ratedTVShows.length; i++) {\n        switch (ratedTVShows[i].rating) {\n          case 1:\n            ones++;\n            break;\n          case 2:\n            twos++;\n            break;\n          case 3:\n            threes++;\n            break;\n          case 4:\n            fours++;\n            break;\n          case 5:\n            fives++;\n            break;\n          default:\n            console.log(ratedTVShows[i].apiId + \"missing rating\");\n            break;\n        }\n      }\n    }\n\n    var ctx = document.getElementById(\"myChart\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\n        datasets: [\n          {\n            label: \"ratings\",\n            data: [ones, twos, threes, fours, fives],\n            backgroundColor: [\n              \"rgba(255, 64, 0, 1)\",\n              \"rgba(255, 213, 0, 1)\",\n              \"rgba(14, 173, 0, 1)\",\n              \"rgba(0, 110, 255, 1)\",\n              \"rgba(114, 0, 245, 1)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n            ],\n            borderWidth: 0,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: true,\n          text: `Rated ${\n            this.state.mediaPage.substring(0, 1).toUpperCase() +\n            this.state.mediaPage.substring(1)\n          }s`,\n        },\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                drawBorder: true,\n                drawOnChartArea: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              display: false,\n            },\n          ],\n        },\n      },\n    });\n\n    let genreLabels = [];\n    let genreData = [];\n\n    // console.log(allMovieGenres)\n    if (this.state.mediaPage === \"movie\") {\n      genreLabels = allMovieGenres.map((elem) => {\n        return elem[0];\n      });\n\n      genreData = allMovieGenres.map((elem) => {\n        return elem[1];\n      });\n    } else {\n      genreLabels = allTVGenres.map((elem) => {\n        return elem[0];\n      });\n\n      genreData = allTVGenres.map((elem) => {\n        return elem[1];\n      });\n    }\n\n    let num = genreLabels.length;\n    console.log(num);\n\n    let colors = [\n      \"rgba(255, 99, 132, 1)\",\n      \"rgba(255, 154, 3, 1)\",\n      \"rgba(255, 206, 86, 1)\",\n      \"rgba(255, 64, 0, 1)\",\n      \"rgba(14, 173, 0, 1)\",\n      \"rgba(0, 110, 255, 1)\",\n      \"rgba(114, 0, 245, 1)\",\n    ];\n\n    let genreColors = colors.slice(0, num);\n\n    var ctx2 = document.getElementById(\"myDoughnutChart\");\n    new Chart(ctx2, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            data: genreData,\n            backgroundColor: genreColors,\n            borderColor: genreColors,\n          },\n        ],\n        labels: genreLabels,\n      },\n      options: {\n        tooltips: {\n          enabled: false,\n        },\n        legend: {},\n      },\n    });\n  };\n\n  render() {\n    // console.log(this.state.mediaPage);\n    let date = new Date(this.props.loggedInUser.createdAt);\n\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    let year = date.getFullYear();\n    let month = monthNames[date.getMonth()];\n\n    return (\n      <div className=\"profile-page\">\n        <div className=\"user-info\">\n          {!this.state.profileImg ? (\n            <div className=\"placeholder-profile\">\n              <Icon path={mdiAccount} size={3} color=\"white\" />\n            </div>\n          ) : (\n            <div className=\"real-profile\">\n              <img\n                className=\"profile-pic\"\n                src={this.state.profileImg}\n                alt=\"profile pic\"\n              />\n            </div>\n          )}\n          <form\n            className=\"profile-pic-uploader\"\n            onSubmit={this.handleProfilePic}\n          >\n            <input type=\"file\" id=\"file\" name=\"file\" accept=\"image/*\" />\n            <label htmlFor=\"file\">Upload Profile Picture...</label>\n            <button\n              className=\"button is-primary is-rounded is-small\"\n              type=\"submit\"\n            >\n              Save\n            </button>\n          </form>\n          <h5 className=\"user-info-text\">\n            <strong>Name:</strong>{\" \"}\n            {this.props.loggedInUser.username.substring(0, 1).toUpperCase() +\n              this.props.loggedInUser.username.substring(1)}\n          </h5>\n          <h5 className=\"user-info-text\">\n            <strong>Email:</strong> {this.props.loggedInUser.email}\n          </h5>\n          <h5 className=\"user-info-text\">\n            <strong>Joined:</strong> {month} {year}\n          </h5>\n        </div>\n\n        <MediaFilter\n          onMovieChange={this.handleToggleMovie}\n          onTVChange={this.handleToggleTV}\n        />\n\n        <div>\n          <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n          <div className=\"rated-list\">\n            {!this.state.listView ? (\n              <button onClick={this.handleList} className=\"button is-rounded\">\n                View All\n              </button>\n            ) : (\n              <>\n                <button onClick={this.handleList} className=\"button is-rounded\">\n                  Hide All\n                </button>\n                <div className=\"control sorting-controls\">\n                  <div>\n                    <input\n                      type=\"radio\"\n                      name=\"sort\"\n                      value=\"alpha\"\n                      onClick={this.handleSort}\n                    />\n                    <label className=\"radio\">Sort by Alphabetical</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"radio\"\n                      name=\"sort\"\n                      value=\"rating\"\n                      onClick={this.handleSort}\n                    />\n                    <label className=\"radio\">Sort by Rating</label>\n                  </div>\n                </div>\n                <List\n                  list={\n                    this.state.mediaPage === \"movie\"\n                      ? this.state.ratedMovies\n                      : this.state.ratedTVShows\n                  }\n                  type={this.state.mediaPage}\n                />\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"genres-section\">\n          <h5 className=\"title is-5\">Top Genres</h5>\n          <div className=\"top-genres\">\n            {this.state.mediaPage === \"movie\"\n              ? this.state.topMovieGenres.map((genre) => {\n                  return (\n                    <h6 className=\"subtitle is-6\" key={genre.id}>\n                      {genre.name}\n                    </h6>\n                  );\n                })\n              : this.state.topTVGenres.map((genre) => {\n                  return (\n                    <h6 className=\"subtitle is-6\" key={genre.id}>\n                      {genre.name}\n                    </h6>\n                  );\n                })}\n          </div>\n          <canvas id=\"myDoughnutChart\" width=\"400\" height=\"400\"></canvas>\n        </div>\n\n        <div className=\"profile-page-footer\">\n          <button onClick={this.handleLogOut} className=\"button is-rounded\">\n            Log Out\n          </button>\n          <button\n            onClick={this.handleDeleteAccount}\n            className=\"button is-rounded\"\n          >\n            Delete Account\n          </button>\n        </div>\n        <Navbar />\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport axios from \"axios\";\nimport Lottie from \"react-lottie\";\nimport * as loadingData from \"../loadingAnimation.json\";\n\nimport Navbar from \"./Navbar\";\nimport MediaFilter from \"./MediaFilter\";\nimport List from \"./List\";\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationDate: loadingData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n  },\n};\n\nclass Watchlist extends Component {\n  state = {\n    user: this.props.loggedInUser,\n    list: [],\n    mediaPage: \"movie\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${config.API_URL}/watchlist`, { withCredentials: true })\n      .then((res) => {\n        this.setState({\n          list: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"get watchlist err\" + err);\n      });\n  }\n\n  handleToggleMovie = () => {\n    window.localStorage.setItem(\"mediaPage\", \"movie\");\n    this.setState({\n      mediaPage: \"movie\",\n    });\n  };\n\n  handleToggleTV = () => {\n    window.localStorage.setItem(\"mediaPage\", \"tv\");\n    this.setState({\n      mediaPage: \"tv\",\n    });\n  };\n\n  render() {\n    let mediaPage = this.state.mediaPage;\n\n    if (window.localStorage.getItem(\"mediaPage\")) {\n      mediaPage = window.localStorage.getItem(\"mediaPage\");\n    }\n\n    let filterByMediaType = this.state.list.filter((media) => {\n      return media.mediaType === mediaPage;\n    });\n\n    return (\n      <div className=\"watchlist-page\">\n        <MediaFilter\n          onMovieChange={this.handleToggleMovie}\n          onTVChange={this.handleToggleTV}\n        />\n        {filterByMediaType.length === 0 ? (\n          <div className=\"watchlist-placeholder\">\n            <Lottie options={defaultOptions} height={120} width={120} />\n            <h3 className=\"subtitle is-3\">Start adding to <br/> your watchlist!</h3>\n          </div>\n        ) : (\n          <List list={filterByMediaType} type={this.state.mediaPage} />\n        )}\n        <Navbar />\n      </div>\n    );\n  }\n}\n\nexport default Watchlist;\n","import React, { Component } from \"react\";\nimport Icon from \"@mdi/react\";\nimport { mdiKeyboardBackspace, mdiKeyboard } from \"@mdi/js\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nlet photoPath = \"https://image.tmdb.org/t/p/w500/\";\n\nclass MediaDetails extends Component {\n  state = {\n    id: \"\",\n    mediaType: \"\",\n    media: \"\",\n    credits: \"\",\n  };\n\n  componentDidMount() {\n    let id = this.props.computedMatch.params.id;\n    let mediaType = this.props.computedMatch.params.mediaType;\n\n    axios\n      .get(`${config.API_URL}/getDetails/${mediaType}/${id}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          id,\n          mediaType,\n          media: res.data.media,\n          credits: res.data.credits,\n        });\n      })\n      .catch((err) => {\n        console.log(\"CDM err\" + err);\n      });\n  }\n\n  handleBack = () => {\n    this.props.history.goBack();\n  };\n\n  handleRate = (e) => {\n    let rating = e.target.innerHTML;\n\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.mediaType,\n          apiId: this.state.media.id,\n          listType: \"rated\",\n          rating,\n          description: this.state.media.overview,\n          image: this.state.media.poster_path,\n          title:\n            this.state.mediaType === \"movie\"\n              ? this.state.media.title\n              : this.state.media.name,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        this.props.history.goBack();\n      })\n      .catch((err) => {\n        console.log(\"create media err\" + err);\n      });\n  };\n\n  handleSkip = () => {\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.mediaType,\n          apiId: this.state.media.id,\n          listType: \"skipped\",\n          description: this.state.media.overview,\n          image: this.state.media.poster_path,\n          title:\n            this.state.mediaType === \"movie\"\n              ? this.state.media.title\n              : this.state.media.name,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        this.props.history.goBack();\n      })\n      .catch((err) => {\n        console.log(\"skip err\" + err);\n      });\n  };\n\n  render() {\n    const {\n      genres,\n      overview,\n      backdrop_path,\n      release_date,\n      runtime,\n      tagline,\n      title,\n      created_by,\n      first_air_date,\n      last_air_date,\n      number_of_episodes,\n      number_of_seasons,\n      status,\n      name,\n    } = this.state.media;\n\n    const { cast, crew } = this.state.credits;\n    let director;\n\n    if (crew) {\n      director = crew.filter((crewMem) => {\n        return crewMem.job === \"Director\";\n      });\n    }\n\n    console.log(this.state.media);\n\n    return (\n      <div className=\"media-details-page\">\n        <div className=\"media-details-header\">\n          <button onClick={this.handleBack} className=\"back-button\">\n            <Icon path={mdiKeyboardBackspace} size={1.5} color=\"#e20f0f\" />\n          </button>\n          <h5 className=\"subtitle is-5 header-type\">Details</h5>\n        </div>\n\n        {this.state.mediaType === \"movie\" ? (\n          <>\n            <img\n              className=\"backdrop-image\"\n              src={photoPath + backdrop_path}\n              alt={title}\n            />\n            <div className=\"media-details\">\n              <h2 className=\"title is-2\">{title}</h2>\n              <h5 className=\"subtitle is-5\">{tagline}</h5>\n              <p className=\"media-details-text\">\n                <strong>Release Date:</strong> {release_date}\n              </p>\n              <p className=\"media-details-text\">\n                <strong>Runtime: </strong> {runtime}\n              </p>\n              <p className=\"media-details-text\">\n                <strong>Overview:</strong>\n                <br />\n                {overview}\n              </p>\n\n              <p className=\"media-details-text\">\n                <strong>Genres:</strong>\n              </p>\n              {genres &&\n                genres.map((genre, index) => {\n                  return (\n                    <p key={index} className=\"media-details-text\">\n                      {genre.name}\n                    </p>\n                  );\n                })}\n\n              <div className=\"cast\">\n                <h5 className=\"title is-5\">Director</h5>\n                {crew && (\n                  <div className=\"cast-details\">\n                    <img\n                      className=\"cast-image\"\n                      src={photoPath + director[0].profile_path}\n                      alt={title}\n                    />\n                    <p className=\"media-details-text\">{director[0].name}</p>\n                  </div>\n                )}\n              </div>\n              <div className=\"cast\">\n                <h5 className=\"title is-5\">Cast</h5>\n                {cast &&\n                  cast.slice(0, 4).map((castMem, index) => {\n                    return (\n                      <div className=\"cast-details\" key={index}>\n                        <img\n                          className=\"cast-image\"\n                          src={photoPath + castMem.profile_path}\n                          alt={title}\n                        />\n                        <p className=\"media-details-text\">\n                          <strong>{castMem.name}</strong> as {castMem.character}\n                        </p>\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          </>\n        ) : (\n          <>\n            <img\n              className=\"backdrop-image\"\n              src={photoPath + backdrop_path}\n              alt={name}\n            />\n            <div className=\"media-details\">\n              <h2 className=\"title is-2\">{name}</h2>\n              <p className=\"media-details-text\"><strong>Number of Episodes: </strong>{number_of_episodes}</p>\n              <p className=\"media-details-text\"><strong>Number of Seasons: </strong>{number_of_seasons}</p>\n              <p className=\"media-details-text\"><strong>Current Status: </strong>{status}</p>\n              <p className=\"media-details-text\"><strong>First Air Date: </strong>{first_air_date}</p>\n              <p className=\"media-details-text\"><strong>Last Air Date: </strong>{last_air_date}</p>\n              <p className=\"media-details-text\"><strong>Overview: </strong><br />{overview}</p>\n\n              <p className=\"media-details-text\">\n                <strong>Genres:</strong>\n              </p>\n              {genres &&\n                genres.map((genre, index) => {\n                  return (\n                    <p key={index} className=\"media-details-text\">\n                      {genre.name}\n                    </p>\n                  );\n                })}\n              <div className=\"cast\">\n                <h5 className=\"title is-5\">Created By:</h5>\n                {created_by && (\n                  <div className=\"cast-details\">\n                    {created_by[0].profile_path && (\n                      <img\n                        className=\"cast-image\"\n                        src={photoPath + created_by[0].profile_path}\n                        alt={created_by[0].name}\n                      />\n                    )}\n                    <p className=\"media-details-text\">{created_by[0].name}</p>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"cast\">\n                <h5 className=\"title is-5\">Cast</h5>\n                {cast &&\n                  cast.slice(0, 4).map((castMem, index) => {\n                    return (\n                      <div className=\"cast-details\" key={index}>\n                        <img\n                          className=\"cast-image\"\n                          src={photoPath + castMem.profile_path}\n                          alt={title}\n                        />\n                        <p className=\"media-details-text\">\n                          <strong>{castMem.name}</strong> as {castMem.character}\n                        </p>\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          </>\n          )}\n\n        <div className=\"media-details-control\">\n        <h4 className=\"title is-4\">Rate or Add to Watchlist</h4>\n          <div className=\"rating-buttons\">\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary circle-buttons\"\n            >\n              1\n            </button>\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary circle-buttons\"\n            >\n              2\n            </button>\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary circle-buttons\"\n            >\n              3\n            </button>\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary circle-buttons\"\n            >\n              4\n            </button>\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary circle-buttons\"\n            >\n              5\n            </button>\n        </div>\n        <button\n          onClick={this.handleSkip}\n          className=\"button is-rounded is-fullwidth\"\n        >\n          Remove from Watchlist\n        </button>\n        </div>\n          \n      </div>\n    );\n  }\n}\n\nexport default MediaDetails;\n","import React, { Component } from \"react\";\nimport Icon from \"@mdi/react\";\nimport { mdiKeyboardBackspace, mdiKeyboard } from \"@mdi/js\";\n\nimport List from \"./List\";\n\nclass SearchResults extends Component {\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  handleBack = () => {\n    this.props.history.goBack();\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"header\">\n          <button onClick={this.handleBack} className=\"back-button\">\n            <Icon path={mdiKeyboardBackspace} size={1.5} color=\"#e20f0f\" />\n          </button>\n          <h5 className=\"subtitle is-5 header-type\">Search Results</h5>\n        </div>\n        <div className=\"search-results-page\">\n          <List list={this.props.list} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport config from \"./config\";\nimport axios from \"axios\";\n\nimport 'bulma/css/bulma.css';\nimport \"./sass/mystyles.scss\";\nimport './styles/App.css';\n\n\nimport PrivateRoute from \"./components/PrivateRoute\";\n\n//COMPONENTS\nimport LandingPage from \"./components/LandingPage\";\nimport SignupPage from \"./components/SignupPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport Intro from \"./components/Intro\";\nimport Profile from \"./components/Profile\";\nimport Watchlist from \"./components/Watchlist\";\nimport MediaDetails from \"./components/MediaDetails\";\nimport SearchResults from \"./components/SearchResults\";\n\nclass App extends Component {\n\n  state = {\n    searchResults: {},\n  }\n\n  handleSignUp = (e) => {\n    e.preventDefault();\n    let username = e.target.username.value\n    let email = e.target.email.value\n    let password = e.target.password.value\n\n    axios.post(`${config.API_URL}/signup`, { username, email, password }, { withCredentials: true })\n      .then(() => {\n        this.props.history.push('/home')\n      })\n      .catch((err) => {\n        console.log(\"sign up error\" + err);\n      });\n  }\n\n  handleLogin = (e) => {\n    e.preventDefault();\n    let username = e.target.username.value\n    let password = e.target.password.value\n\n    axios.post(`${config.API_URL}/login`, { username, password }, { withCredentials: true })\n      .then(() => {\n        this.props.history.push('/home')\n      })\n      .catch((err) => {\n        console.log(\"log in err\" + err);\n      });\n  }\n\n  handleSearch = (results) => {\n    console.log('handle search', results)\n    this.setState({\n      searchResults: results\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Switch>\n          {/* Auth Routes */}\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <LandingPage />;\n            }}\n          />\n          <Route\n            path=\"/signup\"\n            render={(routeProps) => {\n              return <SignupPage onSignup={this.handleSignUp} {...routeProps} />;\n            }}\n          />\n          <Route\n            path=\"/login\"\n            render={(routeProps) => {\n              return <LoginPage onLogin={this.handleLogin} {...routeProps} />;\n            }}\n          />\n\n          {/* App Routes */}\n          <PrivateRoute\n            path=\"/home\"\n            component={Intro}\n            handleSearchProps={this.handleSearch}\n          />\n          <PrivateRoute\n            path=\"/profile\"\n            component={Profile}\n          />\n          <PrivateRoute\n            path=\"/watchlist\"\n            component={Watchlist}\n          />\n          <PrivateRoute\n            path=\"/:mediaType/:id\"\n            component={MediaDetails}\n          />\n          <PrivateRoute\n            path=\"/search\"\n            component={SearchResults}\n            list={this.state.searchResults}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}