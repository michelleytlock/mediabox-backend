{"version":3,"sources":["config.js","components/PrivateRoute.js","components/LandingPage.js","components/SignupPage.js","components/LoginPage.js","components/OnboardingRater.js","components/Onboarding.js","components/MediaFilter.js","components/Navbar.js","components/HomeRater.js","components/Filter.js","components/Home.js","components/Intro.js","components/List.js","components/Profile.js","components/Watchlist.js","components/MediaDetails.js","components/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["PrivateRoute","state","loggedInUser","getUser","axios","get","config","withCredentials","then","res","data","setState","props","history","push","catch","err","console","log","response","status","this","MyComponent","component","render","Component","withRouter","LandingPage","className","to","SignupPage","onSubmit","onSignup","htmlFor","type","id","name","placeholder","LoginPage","onLogin","OnboardingRater","imageSrc","random","poster_path","src","alt","title","onClick","onRate","onSkip","Onboarding","ratedList","length","value","max","MediaFilter","onMovieChange","onTVChange","Navbar","HomeRater","onSave","Filter","button","marginTop","marginRight","onSearch","recommended","style","trending","Home","user","randomMedia","randomMediaType","list","mediaPage","recommendedState","handleSearch","e","preventDefault","target","search","results","filter","media","getRandomMedia","ratedMediaType","listType","mediaType","randomRatedMedia","Math","floor","apiId","process","randomResultsIndex","getTrendingMedia","handleRate","rating","innerHTML","post","description","overview","image","genres","handleSkip","handleSave","handleToggleMovie","handleToggleTV","Intro","randomNum","genre_ids","rated","List","map","index","key","mediaId","Profile","ratedMovies","ratedTVShows","topMovieGenres","topTVGenres","allMovieGenres","allTVGenres","renderChart","handleSort","movies","tv","alphaMovies","sort","a","b","alphaTV","sortRatingMovies","sortRatingTV","ones","twos","threes","fours","fives","i","ctx","document","getElementById","genreLabels","Chart","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","display","text","legend","tooltips","enabled","scales","xAxes","gridLines","drawBorder","drawOnChartArea","yAxes","ticks","genreData","elem","ctx2","tvShows","listOfMovieGenres","movieGenresArr","movie","genreId","newMovieGenresArr","slice","Number","genre","includes","chartMovieGenres","reduce","filtered","listOfTVGenres","tvGenresArr","newTvGenresArr","chartTVGenres","date","Date","createdAt","year","getFullYear","month","getMonth","username","email","width","height","Watchlist","window","localStorage","setItem","getItem","filterByMediaType","photoPath","MediaDetails","credits","handleBack","goBack","computedMatch","params","director","backdrop_path","release_date","runtime","tagline","created_by","first_air_date","last_air_date","number_of_episodes","number_of_seasons","cast","crew","crewMem","job","castMem","profile_path","character","SearchResults","App","handleSignUp","password","handleLogin","exact","path","routeProps","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b10e87e4.chunk.js","sourcesContent":["export default {\n  API_URL: 'https://media-box.herokuapp.com/mediabox' || 'http://localhost:5000/mediabox'\n}","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nclass PrivateRoute extends Component {\n  state = {\n    loggedInUser: '',\n  };\n\n  componentDidMount() {\n    //check if there is a logged in user\n    if (!this.state.loggedInUser) {\n      this.getUser();\n    }\n  }\n\n  getUser = () => {\n    //get user from session from server\n    axios\n      .get(`${config.API_URL}/user`, { withCredentials: true })\n      .then((res) => {\n        // console.log(res)\n        if (res.data) {\n          this.setState({\n            loggedInUser: res.data,\n          });\n        } else {\n          this.props.history.push(\"/login\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        if (err.response.status === 401) {\n          this.props.history.push(\"/\");\n        }\n      });\n  };\n\n  render() {\n\n    let MyComponent = this.props.component\n    if (!this.state.loggedInUser) {\n      return null\n      //loading\n    }\n    // console.log(this.state.loggedInUser)\n    // console.log(this.props.component)\n    \n    return (\n      <Route\n        render={() => {\n          return <MyComponent loggedInUser={this.state.loggedInUser} {...this.props} />;\n        }}\n      />\n    );\n  }\n}\n\nexport default withRouter(PrivateRoute);","import React from \"react\";\nimport {Link} from 'react-router-dom'\n\nexport default function LandingPage() {\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <h1 className=\"title\">MEDIA BOX</h1>\n\n        <Link to={'/signup'}><button className=\"button is-primary\">Sign Up</button></Link>\n        \n        <Link to={'/login'}><button className=\"button is-primary\">Log In</button></Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SignupPage(props) {\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <h1 className=\"title\">Sign Up</h1>\n        <form onSubmit={props.onSignup}>\n          {/* USERNAME */}\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"Username\"\n            />\n          </div>\n          {/* EMAIL */}\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              className=\"input\"\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"user@user.com\"\n            />\n          </div>\n          {/* PASSWORD */}\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"input\"\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"***********\"\n            />\n          </div>\n          {/* BUTTONS */}\n          <div className=\"field\">\n            <div className=\"control\">\n              <button type=\"submit\" className=\"button is-link\">Submit</button>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function LoginPage(props) {\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <h1 className=\"title\">Log In</h1>\n        <form onSubmit={props.onLogin}>\n          {/* USERNAME */}\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"Username\"\n            />\n          </div>\n          {/* PASSWORD */}\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"input\"\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"***********\"\n            />\n          </div>\n          {/* BUTTONS */}\n          <div className=\"field\">\n            <div className=\"control\">\n              <button type=\"submit\" className=\"button is-link\">Continue</button>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nlet photoPath = 'https://image.tmdb.org/t/p/w500/'\n\nexport default function OnboardingRater(props) {\n  let imageSrc = photoPath + props.random.poster_path;\n\n  return (\n    <>\n      <img src={props.random.poster_path ? imageSrc : ''} alt={props.random.title} />\n      \n      <div className=\"columns is-mobile\">\n        <div className=\"column\">\n          <button onClick={props.onRate} className=\"button is-primary is-rounded\">1</button>\n        </div>\n        <div className=\"column\">\n        <button onClick={props.onRate} className=\"button is-primary is-rounded\">2</button>\n        </div>\n        <div className=\"column\">\n        <button onClick={props.onRate} className=\"button is-primary is-rounded\">3</button>\n        </div>\n        <div className=\"column\">\n        <button onClick={props.onRate} className=\"button is-primary is-rounded\">4</button>\n        </div>\n        <div className=\"column\">\n          <button onClick={props.onRate} className=\"button is-primary is-rounded\">5</button>\n        </div>\n      </div>\n\n      <button onClick={props.onSkip} className=\"button is-primary is-rounded\">Skip</button>\n    </>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport OnboardingRater from \"./OnboardingRater\";\n\nexport default class Onboarding extends Component {\n  render() {\n    // console.log(this.props.ratedList)\n    return (\n      <>\n        <div>\n            <h4 className=\"subtitle is-4\">\n              {this.props.ratedList.length / 10 * 100 + \"%\"}\n            </h4>\n            <progress\n              className=\"progress is-primary\"\n              value={(this.props.ratedList.length / 10) * 100}\n              max=\"100\"\n            >\n              {this.props.ratedList.length / 10 + \"%\"}\n            </progress>\n          </div>\n          <br />\n        <OnboardingRater random={this.props.random} onRate={this.props.onRate} onSkip={this.props.onSkip} />\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function MediaFilter(props) {\n  let button = {\n    marginTop: \"10px\",\n    marginRight: \"10px\",\n  };\n  return (\n    <div className=\"media-filter\">\n      <button className=\"button is-white\" onClick={props.onMovieChange}>\n        <h5 className=\"title is-5\">MOVIES</h5>\n      </button>\n      <button className=\"button is-white\" onClick={props.onTVChange}>\n        <h5 className=\"title is-5\">TV SHOWS</h5>\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n    <>\n      <nav className=\"navbar is-primary is-fixed-bottom myNav\">\n            <Link className=\"navbar-item\" to={`/home`}>\n            Discover\n            </Link>\n            <Link className=\"navbar-item\" to={`/watchlist`}>\n            Watchlist\n            </Link>\n            <Link className=\"navbar-item\" to={`/profile`}>\n            Profile\n            </Link>\n      </nav>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nlet photoPath = 'https://image.tmdb.org/t/p/w500/'\n\nexport default function HomeRater(props) {\n  let imageSrc = photoPath + props.random.poster_path;\n\n  return (\n    <>\n      <Link to={`/${props.type}/${props.random.id}`}><img src={props.random.poster_path ? imageSrc : ''} alt={props.random.title} /></Link>\n      \n      <div className=\"columns is-mobile\">\n        <div className=\"column\">\n          <button onClick={props.onRate} className=\"button is-primary is-rounded\">1</button>\n        </div>\n        <div className=\"column\">\n        <button onClick={props.onRate} className=\"button is-primary is-rounded\">2</button>\n        </div>\n        <div className=\"column\">\n        <button onClick={props.onRate} className=\"button is-primary is-rounded\">3</button>\n        </div>\n        <div className=\"column\">\n        <button onClick={props.onRate} className=\"button is-primary is-rounded\">4</button>\n        </div>\n        <div className=\"column\">\n          <button onClick={props.onRate} className=\"button is-primary is-rounded\">5</button>\n        </div>\n      </div>\n      <button onClick={props.onSave} className=\"button is-primary is-rounded\">Save to Watchlist</button>\n      <button onClick={props.onSkip} className=\"button is-primary is-rounded\">Skip</button>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Filter(props) {\n  let button = {\n    marginTop: \"10px\",\n    marginRight: \"10px\",\n  };\n  \n  let placeholder;\n  props.type === \"movie\"\n    ? (placeholder = \"Search movies...\")\n    : (placeholder = \"Search tv shows...\");\n\n  return (\n    <div className=\"main-filter\">\n      <div>\n        <form className=\"search-filter\" onSubmit={props.onSearch}>\n          <input\n            className=\"input searchbar\"\n            name=\"search\"\n            type=\"text\"\n            placeholder={placeholder}\n          />\n          <button className=\"button is-primary is-rounded\" type=\"submit\">Search</button>\n        </form>\n\n        <button\n          onClick={props.recommended}\n          style={button}\n          className=\"button is-success is-light\"\n        >\n          Recommended For You\n        </button>\n        <button\n          onClick={props.trending}\n          style={button}\n          className=\"button is-info is-light\"\n        >\n          Trending\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nimport MediaFilter from \"./MediaFilter\";\nimport Navbar from \"./Navbar\";\nimport HomeRater from \"./HomeRater\";\nimport Filter from \"./Filter\";\n\nclass Home extends Component {\n  state = {\n    user: this.props.loggedInUser,\n    randomMedia: \"\",\n    randomMediaType: \"\",\n    list: [],\n    mediaPage: \"movie\",\n    recommendedState: true\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${config.API_URL}/userData`, { withCredentials: true })\n      .then((res) => {\n        this.setState(\n          {\n            list: res.data.list,\n          },\n          () => {\n            // console.log(\"CDM\");\n            // if (!window.localStorage.getItem(\"media\")) {\n            //   this.getRandomMedia();\n            // }\n            this.getRandomMedia();\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"userData err\" + err);\n      });\n  }\n\n  handleSearch = (e) => {\n    e.preventDefault();\n    \n    console.log(e.target.search.value);\n    console.log(this.props.history)\n\n    axios\n      .get(`${config.API_URL}/${this.state.mediaPage}/${e.target.search.value}/searchresults`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data)\n\n        let results = res.data.filter((media) => {\n          return media.poster_path;\n        });\n\n        console.log(results)\n\n        this.props.history.push('/search')\n      })\n      .catch((err) => {\n        console.log(\"search err\" + err);\n      });\n  };\n\n  getRandomMedia = () => {\n    // FILTER THROUGH LIST TO FIND \"RATED\" MEDIAS\n    let allRated = this.state.list.filter((media) => {\n      return media.listType === \"rated\";\n    });\n\n    // FILTER THROUGH LIST TO FIND THE CORRECT TYPE (MOVIE/TV)\n    let ratedMediaType = allRated.filter((media) => {\n      return media.mediaType === this.state.mediaPage;\n    });\n\n    // console.log(this.state.mediaPage);\n    // console.log(ratedMediaType);\n    // console.log(this.state.recommendedState);\n\n    let randomRatedMediaIndex = Math.floor(\n      Math.random() * ratedMediaType.length\n    );\n\n    let randomRatedMedia = ratedMediaType[randomRatedMediaIndex];\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/${this.state.mediaPage}/${randomRatedMedia.apiId}/recommendations?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\n      )\n      .then((res) => {\n        // console.log(res.data.total_pages)\n        let results = res.data.results.filter((media) => {\n          return media.poster_path;\n        });\n\n        let randomResultsIndex = Math.floor(Math.random() * results.length);\n\n        // console.log(randomResultsIndex);\n        console.log(\n          \"This is recommended random media \",\n          results[randomResultsIndex]\n        );\n\n        // window.localStorage.setItem(\"media\", JSON.stringify(results[randomResultsIndex]));\n        // window.localStorage.setItem(\"type\", this.state.mediaPage);\n        this.setState({\n          recommendedState: true,\n          randomMedia: results[randomResultsIndex],\n          randomMediaType: this.state.mediaPage,\n        });\n      })\n      .catch((err) => {\n        console.log(\"getRandom err\" + err);\n      });\n  };\n\n  getTrendingMedia = () => {\n    console.log(this.state.recommendedState);\n    axios\n      .get(\n        `https://api.themoviedb.org/3/trending/${this.state.mediaPage}/day?api_key=${process.env.REACT_APP_API_KEY}`\n      )\n      .then((res) => {\n        let results = res.data.results.filter((media) => {\n          return media.poster_path;\n        });\n\n        let randomResultsIndex = Math.floor(Math.random() * results.length);\n        console.log(\"This is trending media \", results[randomResultsIndex]);\n        this.setState({\n          recommendedState: false,\n          randomMedia: results[randomResultsIndex],\n          randomMediaType: this.state.mediaPage,\n        });\n      })\n      .catch((err) => {\n        console.log(\"gettrending err\" + err);\n      });\n  };\n\n  handleRate = (e) => {\n    let rating = e.target.innerHTML;\n    console.log(this.state.recommendedState);\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.randomMediaType,\n          apiId: this.state.randomMedia.id,\n          listType: \"rated\",\n          rating,\n          description: this.state.randomMedia.overview,\n          image: this.state.randomMedia.poster_path,\n          title:\n            this.state.randomMediaType === \"movie\"\n              ? this.state.randomMedia.title\n              : this.state.randomMedia.name,\n          genres: this.state.randomMedia.genres\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n\n        // FIX RATED MOVIES RENDERING AGAIN HERE\n\n        // window.localStorage.removeItem(\"media\");\n        this.setState(\n          {\n            list: response.data.list,\n            randomMedia: \"\",\n            randomMediaType: \"\",\n          },\n          () => {\n            this.recommendedState\n              ? this.getRandomMedia()\n              : this.getTrendingMedia();\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"create media err\" + err);\n      });\n  };\n\n  handleSkip = () => {\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.randomMediaType,\n          apiId: this.state.randomMedia.id,\n          listType: \"skipped\",\n          description: this.state.randomMedia.overview,\n          image: this.state.randomMedia.poster_path,\n          title:\n            this.state.randomMediaType === \"movie\"\n              ? this.state.randomMedia.title\n              : this.state.randomMedia.name,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n        this.setState(\n          {\n            list: response.data.list,\n            randomMedia: \"\",\n            randomMediaType: \"\",\n          },\n          () => {\n            this.recommendedState\n              ? this.getRandomMedia()\n              : this.getTrendingMedia();\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"skip err\" + err);\n      });\n  };\n\n  handleSave = () => {\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.randomMediaType,\n          apiId: this.state.randomMedia.id,\n          listType: \"watchlist\",\n          description: this.state.randomMedia.overview,\n          image: this.state.randomMedia.poster_path,\n          title:\n            this.state.randomMediaType === \"movie\"\n              ? this.state.randomMedia.title\n              : this.state.randomMedia.name,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n        this.setState(\n          {\n            list: response.data.list,\n            randomMedia: \"\",\n            randomMediaType: \"\",\n          },\n          () => {\n            this.recommendedState\n              ? this.getRandomMedia()\n              : this.getTrendingMedia();\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"save to watchlist err\" + err);\n      });\n  };\n\n  handleToggleMovie = () => {\n    this.setState(\n      {\n        mediaPage: \"movie\",\n      },\n      this.getRandomMedia\n    );\n  };\n\n  handleToggleTV = () => {\n    this.setState(\n      {\n        mediaPage: \"tv\",\n      },\n      this.getRandomMedia\n    );\n  };\n\n  render() {\n    let media = this.state.randomMedia;\n    let type = this.state.randomMediaType;\n\n    // if (window.localStorage.getItem(\"media\")) {\n    //   media = JSON.parse(window.localStorage.getItem(\"media\"));\n    //   type = window.localStorage.getItem(\"type\")\n    // }\n\n    return (\n      <>\n        <MediaFilter\n          onMovieChange={this.handleToggleMovie}\n          onTVChange={this.handleToggleTV}\n        />\n        <Filter\n          type={type}\n          trending={this.getTrendingMedia}\n          recommended={this.getRandomMedia}\n          onSearch={this.handleSearch}\n        />\n        <HomeRater\n          random={media}\n          type={type}\n          onRate={this.handleRate}\n          onSkip={this.handleSkip}\n          onSave={this.handleSave}\n        />\n        <Navbar />\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nimport Onboarding from \"./Onboarding\";\nimport Home from \"./Home\";\n\nclass Intro extends Component {\n  state = {\n    user: this.props.loggedInUser,\n    randomMedia: \"\",\n    randomMediaType: \"\",\n    list: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${config.API_URL}/userData`, { withCredentials: true })\n      .then((res) => {\n        this.setState({\n          list: res.data.list,\n        });\n\n        let rated;\n\n        if (this.state.list.length !== 0) {\n          rated = this.state.list.filter((media) => {\n            return (media.listType = \"rated\");\n          });\n        }\n\n        if (rated.length < 10) {\n          this.getRandomMedia();\n        }\n      })\n      .catch((err) => {\n        console.log(\"CDM err\" + err);\n      });\n  }\n\n  getRandomMedia = () => {\n    console.log(\"get random media console log\");\n    let random = Math.floor(Math.random() * 2);\n    let mediaType;\n\n    random === 1 ? (mediaType = \"movie\") : (mediaType = \"tv\");\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/${mediaType}/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\n      )\n      .then((res) => {\n        let results = res.data.results.filter((media) => {\n          return media.poster_path;\n        });\n\n        let randomNum = Math.floor(Math.random() * results.length);\n\n        // console.log(randomNum);\n        // console.log(results);\n        console.log(results[randomNum]);\n\n        //FIX DUPLICATE MEDIAS\n\n        // for (let i = 0; i < results.length; i++) {\n        //   if (this.state.list && this.state.list.some(\n        //     e => { return e.apiId === results[i].id }\n        //   )) {\n        //     randomNum = i;\n        //   }\n        // }\n\n        this.setState({\n          randomMedia: results[randomNum],\n          randomMediaType: mediaType,\n        });\n      })\n      .catch((err) => {\n        console.log(\"getrandom err\" + err);\n      });\n  };\n\n  handleRate = (e) => {\n    let rating = e.target.innerHTML;\n    console.log(this.state.randomMedia.genre_ids);\n    // console.log(this.state.randomMediaType);\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.randomMediaType,\n          apiId: this.state.randomMedia.id,\n          listType: \"rated\",\n          rating,\n          description: this.state.randomMedia.overview,\n          image: this.state.randomMedia.poster_path,\n          title:\n            this.state.randomMediaType === \"movie\"\n              ? this.state.randomMedia.title\n              : this.state.randomMedia.name,\n          genres: this.state.randomMedia.genre_ids,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n        this.setState({\n          list: response.data.list,\n          randomMedia: \"\",\n          randomMediaType: \"\",\n        });\n\n        let rated = this.state.list.filter((media) => {\n          return media.listType === \"rated\";\n        });\n\n        if (rated.length < 10) {\n          this.getRandomMedia();\n        }\n      })\n      .catch((err) => {\n        console.log(\"create media err\" + err);\n      });\n  };\n\n  handleSkip = () => {\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.randomMediaType,\n          apiId: this.state.randomMedia.id,\n          listType: \"skipped\",\n          description: this.state.randomMedia.overview,\n          image: this.state.randomMedia.poster_path,\n          title:\n            this.state.randomMediaType === \"movie\"\n              ? this.state.randomMedia.title\n              : this.state.randomMedia.name,\n          genres: this.state.randomMedia.genre_ids,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data.list);\n        this.setState({\n          list: response.data.list,\n          randomMedia: \"\",\n          randomMediaType: \"\",\n        });\n\n        let rated = this.state.list.filter((media) => {\n          return media.listType === \"rated\";\n        });\n\n        if (rated.length < 10) {\n          this.getRandomMedia();\n        }\n      })\n      .catch((err) => {\n        console.log(\"skip err\" + err);\n      });\n  };\n\n  render() {\n    const { list } = this.state;\n    // console.log(list)\n    let rated = list.filter((media) => {\n      return (media.listType = \"rated\");\n    });\n\n    // console.log(rated)\n    return (\n      <>\n        {rated.length < 10 ? (\n          <Onboarding\n            ratedList={rated}\n            random={this.state.randomMedia}\n            onRate={this.handleRate}\n            onSkip={this.handleSkip}\n          />\n        ) : (\n            <Home {...this.props} />\n        )}\n      </>\n    );\n  }\n}\nexport default Intro;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nlet photoPath = \"https://image.tmdb.org/t/p/w500/\";\n\nexport default function List(props) {\n  console.log(props.list);\n\n  return (\n      <div className=\"list\">\n        {props.list.map((media, index) => {\n          return (\n            <div key={index} className=\"list-item\">\n              <Link to={`/${props.type}/${media.apiId}`}>\n                <img\n                  src={photoPath + media.mediaId.image}\n                  alt={media.mediaId.title}\n                />\n                <h5 className=\"subtitle is-5\">{media.mediaId.title}</h5>\n                {media.rating && <p>{media.rating}</p>}\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n  );\n}\n","import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport config from \"../config\";\nimport axios from \"axios\";\nimport Chart from \"chart.js\";\n\nimport Navbar from \"./Navbar\";\nimport MediaFilter from \"./MediaFilter\";\nimport List from \"./List\";\n\nclass Profile extends Component {\n  state = {\n    ratedMovies: [],\n    ratedTVShows: [],\n    topMovieGenres: [],\n    topTVGenres: [],\n    mediaPage: \"movie\",\n    allMovieGenres: [],\n    allTVGenres: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${config.API_URL}/userData`, { withCredentials: true })\n      .then((res) => {\n        axios\n          .get(`${config.API_URL}/getGenres`, { withCredentials: true })\n          .then((genres) => {\n            //FILTER ONLY RATED MEDIAS\n            let rated = res.data.list.filter((media) => {\n              return media.listType === \"rated\";\n            });\n\n            //FILTER BY MEDIA TYPE\n            let movies = rated.filter((media) => {\n              return media.mediaType === \"movie\";\n            });\n\n            let tvShows = rated.filter((media) => {\n              return media.mediaType === \"tv\";\n            });\n\n            //FIND MOST WATCHED MOVIE GENRES\n            let listOfMovieGenres = {};\n            let movieGenres = movies.map((movie) => {\n              for (let i = 0; i < movie.mediaId.genres.length; i++) {\n                let genreId = movie.mediaId.genres[i];\n                if (!listOfMovieGenres[genreId]) {\n                  listOfMovieGenres[genreId] = 1;\n                } else {\n                  listOfMovieGenres[genreId]++;\n                }\n              }\n            });\n            let movieGenresArr = [];\n            for (let id in listOfMovieGenres) {\n              movieGenresArr.push([id, listOfMovieGenres[id]]);\n            }\n            movieGenresArr.sort((a, b) => {\n              return b[1] - a[1];\n            });\n            let newMovieGenresArr = movieGenresArr.slice(0, 3).map((id) => {\n              return Number(id[0]);\n            });\n\n            let topMovieGenres = genres.data.movie.genres.filter((genre) => {\n              return newMovieGenresArr.includes(genre.id);\n            });\n\n            let chartMovieGenres = genres.data.movie.genres.reduce((filtered, elem) => {\n              for (let i = 0; i < movieGenresArr.length; i++) {\n                if (elem.id === Number(movieGenresArr[i][0])) {\n                  movieGenresArr[i][0] = elem.name;\n                  filtered.push(movieGenresArr[i])\n                }\n              }\n              return filtered\n            }, [])\n\n            //FIND MOST WATCHED TV GENRES\n            let listOfTVGenres = {};\n            let tvGenres = tvShows.map((tv) => {\n              for (let i = 0; i < tv.mediaId.genres.length; i++) {\n                let genreId = tv.mediaId.genres[i];\n                if (!listOfTVGenres[genreId]) {\n                  listOfTVGenres[genreId] = 1;\n                } else {\n                  listOfTVGenres[genreId]++;\n                }\n              }\n            });\n            let tvGenresArr = [];\n            for (let id in listOfTVGenres) {\n              tvGenresArr.push([id, listOfTVGenres[id]]);\n            }\n            tvGenresArr.sort((a, b) => {\n              return b[1] - a[1];\n            });\n\n            let newTvGenresArr = tvGenresArr.slice(0, 3).map((id) => {\n              return Number(id[0]);\n            });\n\n            let topTVGenres = genres.data.tv.genres.filter((genre) => {\n              return newTvGenresArr.includes(genre.id);\n            });\n\n            let chartTVGenres = genres.data.tv.genres.reduce((filtered, elem) => {\n              for (let i = 0; i < tvGenresArr.length; i++) {\n                if (elem.id === Number(tvGenresArr[i][0])) {\n                  tvGenresArr[i][0] = elem.name;\n                  filtered.push(tvGenresArr[i])\n                }\n              }\n              return filtered\n            }, [])\n\n            // console.log(genres.data.movie);\n            // console.log(newMovieGenresArr);\n            // console.log(topMovieGenres);\n            // console.log(topTVGenres);\n            // console.log(genres.data.movie.genres)\n\n            this.setState(\n              {\n                ratedMovies: movies,\n                ratedTVShows: tvShows,\n                topMovieGenres,\n                topTVGenres,\n                allMovieGenres: chartMovieGenres,\n                allTVGenres: chartTVGenres\n              },\n              () => {\n                this.renderChart();\n              }\n            );\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleToggleMovie = () => {\n    this.setState(\n      {\n        mediaPage: \"movie\",\n      },\n      () => {\n        this.renderChart();\n      }\n    );\n  };\n\n  handleToggleTV = () => {\n    this.setState(\n      {\n        mediaPage: \"tv\",\n      },\n      () => {\n        this.renderChart();\n      }\n    );\n  };\n\n  handleSort = (e) => {\n    console.log(e.target.value);\n    if (e.target.value === \"alpha\") {\n      let movies = this.state.ratedMovies;\n      let tv = this.state.ratedTVShows;\n\n      let alphaMovies = movies.sort((a, b) => {\n        if (a.mediaId.title < b.mediaId.title) {\n          return -1;\n        } else if (a.mediaId.title > b.mediaId.title) {\n          return 1;\n        }\n        return 0;\n      });\n\n      console.log(alphaMovies);\n\n      let alphaTV = tv.sort((a, b) => {\n        if (a.mediaId.title < b.mediaId.title) {\n          return -1;\n        } else if (a.mediaId.title > b.mediaId.title) {\n          return 1;\n        }\n        return 0;\n      });\n\n      console.log(alphaTV);\n\n      this.setState({\n        ratedMovies: alphaMovies,\n        ratedTVShows: alphaTV,\n      });\n    } else {\n      let sortRatingMovies = this.state.ratedMovies.sort((a, b) => {\n        return b.rating - a.rating;\n      });\n\n      let sortRatingTV = this.state.ratedTVShows.sort((a, b) => {\n        return b.rating - a.rating;\n      });\n\n      this.setState({\n        ratedMovies: sortRatingMovies,\n        ratedTVShows: sortRatingTV,\n      });\n    }\n  };\n\n  renderChart = () => {\n    const { ratedMovies, ratedTVShows, allMovieGenres, allTVGenres } = this.state;\n\n    let ones = 0,\n      twos = 0,\n      threes = 0,\n      fours = 0,\n      fives = 0;\n\n    if (this.state.mediaPage === \"movie\") {\n      for (let i = 0; i < ratedMovies.length; i++) {\n        switch (ratedMovies[i].rating) {\n          case 1:\n            ones++;\n            break;\n          case 2:\n            twos++;\n            break;\n          case 3:\n            threes++;\n            break;\n          case 4:\n            fours++;\n            break;\n          case 5:\n            fives++;\n            break;\n          default:\n            console.log(ratedMovies[i].apiId + \"missing rating\");\n            break;\n        }\n      }\n    } else {\n      for (let i = 0; i < ratedTVShows.length; i++) {\n        switch (ratedTVShows[i].rating) {\n          case 1:\n            ones++;\n            break;\n          case 2:\n            twos++;\n            break;\n          case 3:\n            threes++;\n            break;\n          case 4:\n            fours++;\n            break;\n          case 5:\n            fives++;\n            break;\n          default:\n            console.log(ratedTVShows[i].apiId + \"missing rating\");\n            break;\n        }\n      }\n    }\n\n    var ctx = document.getElementById(\"myChart\");\n    var myChart = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: [\"1\", \"2\", \"3\", \"4\", \"5\"],\n        datasets: [\n          {\n            label: \"ratings\",\n            data: [ones, twos, threes, fours, fives],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\",\n              \"rgba(153, 102, 255, 0.2)\",\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\",\n              \"rgba(153, 102, 255, 1)\",\n            ],\n            borderWidth: 0,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: true,\n          text: \"Rated Medias\",\n        },\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                drawBorder: true,\n                drawOnChartArea: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              gridLines: {\n                drawBorder: false,\n                drawOnChartArea: false,\n              },\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n        },\n      },\n    });\n\n    let genreLabels = []\n    let genreData = []\n\n    // console.log(allMovieGenres)\n    if (this.state.mediaPage === \"movie\") {\n      genreLabels = allMovieGenres.map((elem) => {\n        return elem[0]\n      })\n  \n      genreData = allMovieGenres.map((elem) => {\n        return elem[1]\n      })\n    } else {\n      genreLabels = allTVGenres.map((elem) => {\n        return elem[0]\n      })\n  \n      genreData = allTVGenres.map((elem) => {\n        return elem[1]\n      })\n    }\n\n    var ctx2 = document.getElementById(\"myDoughnutChart\");\n    var myDoughnutChart = new Chart(ctx2, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            data: genreData,\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\"\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(255, 206, 86, 1)\"\n            ],\n          },\n        ],\n        labels: genreLabels,\n      },\n    });\n  };\n\n  render() {\n    // console.log(this.state.mediaPage);\n    let date = new Date(this.props.loggedInUser.createdAt);\n\n    const monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    let year = date.getFullYear();\n    let month = monthNames[date.getMonth()];\n\n    return (\n      <>\n        <h1>{this.props.loggedInUser.username}</h1>\n        <h1>{this.props.loggedInUser.email}</h1>\n        <h1>\n          Joined in {month} {year}\n        </h1>\n        <MediaFilter\n          onMovieChange={this.handleToggleMovie}\n          onTVChange={this.handleToggleTV}\n        />\n        <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n        <h1>Top Genres</h1>\n        {this.state.mediaPage === \"movie\"\n          ? this.state.topMovieGenres.map((genre) => {\n              return <p key={genre.id}>{genre.name}</p>;\n            })\n          : this.state.topTVGenres.map((genre) => {\n              return <p key={genre.id}>{genre.name}</p>;\n            })}\n        <canvas id=\"myDoughnutChart\" width=\"400\" height=\"400\"></canvas>\n        <div className=\"control\">\n          <label className=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"sort\"\n              value=\"alpha\"\n              onClick={this.handleSort}\n            />\n            Sort by Alphabetical\n          </label>\n          <label className=\"radio\">\n            <input\n              type=\"radio\"\n              name=\"sort\"\n              value=\"rating\"\n              onClick={this.handleSort}\n            />\n            Sort by Rating\n          </label>\n        </div>\n        <List\n          list={\n            this.state.mediaPage === \"movie\"\n              ? this.state.ratedMovies\n              : this.state.ratedTVShows\n          }\n          type={this.state.mediaPage}\n        />\n        <Navbar />\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nimport Navbar from \"./Navbar\";\nimport MediaFilter from \"./MediaFilter\";\nimport List from \"./List\";\n\nclass Watchlist extends Component {\n  state = {\n    user: this.props.loggedInUser,\n    list: [],\n    mediaPage: \"movie\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${config.API_URL}/watchlist`, { withCredentials: true })\n      .then((res) => {\n        this.setState({\n          list: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"get watchlist err\" + err);\n      });\n  }\n\n  handleToggleMovie = () => {\n    window.localStorage.setItem(\"mediaPage\", \"movie\");\n    this.setState({\n      mediaPage: \"movie\",\n    });\n  };\n\n  handleToggleTV = () => {\n    window.localStorage.setItem(\"mediaPage\", \"tv\");\n    this.setState({\n      mediaPage: \"tv\",\n    });\n  };\n\n  render() {\n    let mediaPage = this.state.mediaPage;\n\n    if (window.localStorage.getItem(\"mediaPage\")) {\n      mediaPage = window.localStorage.getItem(\"mediaPage\");\n    }\n\n    let filterByMediaType = this.state.list.filter((media) => {\n      return media.mediaType === mediaPage;\n    });\n\n    // console.log(filterByMediaType)\n\n    return (\n      <>\n        <MediaFilter\n          onMovieChange={this.handleToggleMovie}\n          onTVChange={this.handleToggleTV}\n        />\n        {filterByMediaType.length === 0 ? (\n          <h1>Start adding to your Watchlist!</h1>\n        ) : (\n          <List list={filterByMediaType} type={this.state.mediaPage} />\n        )}\n        <Navbar />\n      </>\n    );\n  }\n}\n\nexport default Watchlist;\n","import React, { Component } from \"react\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nlet photoPath = \"https://image.tmdb.org/t/p/w500/\";\n\nclass MediaDetails extends Component {\n  state = {\n    id: \"\",\n    mediaType: \"\",\n    media: \"\",\n    credits: \"\",\n  };\n\n  componentDidMount() {\n    let id = this.props.computedMatch.params.id;\n    let mediaType = this.props.computedMatch.params.mediaType;\n\n    axios\n      .get(`${config.API_URL}/getDetails/${mediaType}/${id}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res.data);\n        this.setState({\n          id,\n          mediaType,\n          media: res.data.media,\n          credits: res.data.credits,\n        });\n      })\n      .catch((err) => {\n        console.log(\"CDM err\" + err);\n      });\n  }\n\n  handleBack = () => {\n    this.props.history.goBack();\n  };\n\n  handleRate = (e) => {\n    let rating = e.target.innerHTML;\n\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.mediaType,\n          apiId: this.state.media.id,\n          listType: \"rated\",\n          rating,\n          description: this.state.media.overview,\n          image: this.state.media.poster_path,\n          title:\n            this.state.mediaType === \"movie\"\n              ? this.state.media.title\n              : this.state.media.name,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        this.props.history.goBack();\n      })\n      .catch((err) => {\n        console.log(\"create media err\" + err);\n      });\n  };\n\n  handleSkip = () => {\n    axios\n      .post(\n        `${config.API_URL}/create`,\n        {\n          mediaType: this.state.mediaType,\n          apiId: this.state.media.id,\n          listType: \"skipped\",\n          description: this.state.media.overview,\n          image: this.state.media.poster_path,\n          title:\n            this.state.mediaType === \"movie\"\n              ? this.state.media.title\n              : this.state.media.name,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        this.props.history.goBack();\n      })\n      .catch((err) => {\n        console.log(\"skip err\" + err);\n      });\n  };\n\n  render() {\n    const {\n      genres,\n      overview,\n      backdrop_path,\n      release_date,\n      runtime,\n      tagline,\n      title,\n      created_by,\n      first_air_date,\n      last_air_date,\n      number_of_episodes,\n      number_of_seasons,\n      status,\n      name,\n    } = this.state.media;\n\n    const { cast, crew } = this.state.credits;\n    let director;\n\n    if (crew) {\n      director = crew.filter((crewMem) => {\n        return crewMem.job === \"Director\";\n      });\n    }\n\n    console.log(this.state.media);\n\n    return (\n      <>\n        <button\n          onClick={this.handleBack}\n          className=\"button is-primary is-light\"\n        >\n          Back\n        </button>\n        <div className=\"columns is-mobile\">\n          <div className=\"column\">\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary is-rounded\"\n            >\n              1\n            </button>\n          </div>\n          <div className=\"column\">\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary is-rounded\"\n            >\n              2\n            </button>\n          </div>\n          <div className=\"column\">\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary is-rounded\"\n            >\n              3\n            </button>\n          </div>\n          <div className=\"column\">\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary is-rounded\"\n            >\n              4\n            </button>\n          </div>\n          <div className=\"column\">\n            <button\n              onClick={this.handleRate}\n              className=\"button is-primary is-rounded\"\n            >\n              5\n            </button>\n          </div>\n        </div>\n        <button\n          onClick={this.handleSkip}\n          className=\"button is-primary is-rounded\"\n        >\n          Remove from Watchlist\n        </button>\n        {this.state.mediaType === \"movie\" ? (\n          <div>\n            <img src={photoPath + backdrop_path} alt={title} />\n            <h2 className=\"title is-2\">{title}</h2>\n            <p>{tagline}</p>\n            <p>{release_date}</p>\n            <p>{runtime}</p>\n            <p>{overview}</p>\n\n            {genres &&\n              genres.map((genre, index) => {\n                return (\n                  <h5 key={index} className=\"subtitle is-5\">\n                    {genre.name}\n                  </h5>\n                );\n              })}\n\n            <h3 className=\"subtitle is-3\">Details</h3>\n            <div>\n              {cast &&\n                cast.slice(0, 4).map((castMem, index) => {\n                  return (\n                    <div key={index}>\n                      <img src={photoPath + castMem.profile_path} alt={title} />\n                      <h5 className=\"subtitle is-5\">\n                        {castMem.name} as {castMem.character}\n                      </h5>\n                    </div>\n                  );\n                })}\n            </div>\n            <div>\n              {crew && (\n                <div>\n                  <img src={photoPath + director[0].profile_path} alt={title} />\n                  <h5 className=\"subtitle is-5\">\n                    Director: {director[0].name}\n                  </h5>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div>\n            <img src={photoPath + backdrop_path} alt={name} />\n            <h2 className=\"title is-2\">{name}</h2>\n            <p>{number_of_episodes}</p>\n            <p>{number_of_seasons}</p>\n            <p>{status}</p>\n            <p>{overview}</p>\n            <p>{first_air_date}</p>\n            <p>{last_air_date}</p>\n            {genres &&\n              genres.map((genre, index) => {\n                return (\n                  <h5 key={index} className=\"subtitle is-5\">\n                    {genre.name}\n                  </h5>\n                );\n              })}\n            <h3 className=\"subtitle is-3\">Details</h3>\n            {created_by && (\n              <div>\n                {created_by[0].profile_path && (\n                  <img\n                    src={photoPath + created_by[0].profile_path}\n                    alt={created_by[0].name}\n                  />\n                )}\n                <h5 className=\"subtitle is-5\">\n                  Created By: {created_by[0].name}\n                </h5>\n              </div>\n            )}\n            <div>\n              {cast &&\n                cast.slice(0, 4).map((castMem, index) => {\n                  return (\n                    <div key={index}>\n                      <img src={photoPath + castMem.profile_path} alt={title} />\n                      <h5 className=\"subtitle is-5\">\n                        {castMem.name} as {castMem.character}\n                      </h5>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MediaDetails;\n","import React, { Component } from \"react\";\n\nimport List from \"./List\";\n\nclass SearchResults extends Component {\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  handleBack = () => {\n    this.props.history.goBack();\n  };\n\n  render() {\n    return (\n      <>\n        <button\n          onClick={this.handleBack}\n          className=\"button is-primary is-light\"\n        >\n          Back\n        </button>\n        {/* <List list={this.props.list}/> */}\n      </>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport config from \"./config\";\nimport axios from \"axios\";\n\nimport 'bulma/css/bulma.css';\nimport \"./sass/mystyles.scss\";\n\nimport PrivateRoute from \"./components/PrivateRoute\";\n\n//COMPONENTS\nimport LandingPage from \"./components/LandingPage\";\nimport SignupPage from \"./components/SignupPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport Intro from \"./components/Intro\";\nimport Profile from \"./components/Profile\";\nimport Watchlist from \"./components/Watchlist\";\nimport MediaDetails from \"./components/MediaDetails\";\nimport SearchResults from \"./components/SearchResults\";\n\nclass App extends Component {\n\n  handleSignUp = (e) => {\n    e.preventDefault();\n    let username = e.target.username.value\n    let email = e.target.email.value\n    let password = e.target.password.value\n\n    axios.post(`${config.API_URL}/signup`, { username, email, password }, { withCredentials: true })\n      .then(() => {\n        this.props.history.push('/home')\n      })\n      .catch((err) => {\n        console.log(\"sign up error\" + err);\n      });\n  }\n\n  handleLogin = (e) => {\n    e.preventDefault();\n    let username = e.target.username.value\n    let password = e.target.password.value\n\n    axios.post(`${config.API_URL}/login`, { username, password }, { withCredentials: true })\n      .then(() => {\n        this.props.history.push('/home')\n      })\n      .catch((err) => {\n        console.log(\"log in err\" + err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          {/* Auth Routes */}\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <LandingPage />;\n            }}\n          />\n          <Route\n            path=\"/signup\"\n            render={(routeProps) => {\n              return <SignupPage onSignup={this.handleSignUp} {...routeProps} />;\n            }}\n          />\n          <Route\n            path=\"/login\"\n            render={(routeProps) => {\n              return <LoginPage onLogin={this.handleLogin} {...routeProps} />;\n            }}\n          />\n\n          {/* App Routes */}\n          <PrivateRoute\n            path=\"/home\"\n            component={Intro}\n          />\n          <PrivateRoute\n            path=\"/profile\"\n            component={Profile}\n          />\n          <PrivateRoute\n            path=\"/watchlist\"\n            component={Watchlist}\n          />\n          <PrivateRoute\n            path=\"/:mediaType/:id\"\n            component={MediaDetails}\n          />\n          <PrivateRoute\n            path=\"/search\"\n            component={SearchResults}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}